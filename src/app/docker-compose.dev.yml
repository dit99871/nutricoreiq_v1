services:
  pg:
    image: postgres
    container_name: db
    environment:
#      POSTGRES_DB: ${APP__CONFIG__DB__NAME}
#      POSTGRES_USER: ${APP__CONFIG__DB__USER}
#      POSTGRES_PASSWORD: ${APP__CONFIG__DB__PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

#  test_db:
#    image: postgres
#    environment:
#      POSTGRES_DB: ${APP__CONFIG__DB__TEST_NAME}
#      POSTGRES_USER: ${APP__CONFIG__DB__TEST_USER}
#      POSTGRES_PASSWORD: ${APP__CONFIG__DB__TEST_PASSWORD}
#    ports:
#      - "5435:5432"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6378:6379"
    volumes:
      - redisdata:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3
    command: redis-server --save 60 1 --loglevel warning

volumes:
  pgdata:
  redisdata:

networks:
  app-network:
    driver: bridge