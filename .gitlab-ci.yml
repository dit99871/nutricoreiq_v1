image: python:3.13-slim

cache:
  paths:
    - .cache/pypoetry

stages:
  - test

test_job:
  stage: test
  services:
    - name: postgres:17
      alias: postgres
    - name: redis:6
      alias: redis
  variables:
    POSTGRES_DB: test_db
    POSTGRES_USER: test_user
    POSTGRES_PASSWORD: test_password
    REDIS_PASSWORD: test_password
    APP_CONFIG__DB__TEST_URL: postgresql+asyncpg://test_user:test_password@postgres:5432/test_db
    APP_CONFIG__REDIS__URL: redis://:test_password@redis:6379/0
    APP_CONFIG__REDIS__SALT: test_salt
    APP_CONFIG__REDIS__PASSWORD: test_password
    APP_CONFIG__AUTH__SECRET_KEY: $APP_CONFIG__AUTH__SECRET_KEY
    APP_CONFIG__AUTH__ALGORITHM: HS256
    APP_CONFIG__RUN__HOST: 0.0.0.0
    APP_CONFIG__RUN__PORT: 8000
    APP_CONFIG__CORS__ALLOW_ORIGINS: '["https://nutricoreiq.ru", "http://localhost:8000", "http://127.0.0.1:8000"]'
    APP_CONFIG__CORS__ALLOW_METHODS: '["GET", "POST", "DELETE"]'
    APP_CONFIG__CORS__ALLOW_HEADERS: '["Accept", "Authorization", "Content-Type", "X-CSRF-Token"]'
    APP_CONFIG__CORS__ALLOW_CREDENTIALS: "true"
  script:
    - apt-get update && apt-get install -y curl
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="/root/.local/bin:$PATH"
    - poetry config virtualenvs.create false
    - poetry install --no-root
    - poetry run alembic upgrade head
    - poetry run pytest src/tests -v --log-cli-level=DEBUG --junitxml=results/test-results.xml --cov=src --cov-report=xml
  artifacts:
    when: always
    paths:
      - results/test-results.xml
      - coverage.xml
    reports:
      junit: results/test-results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
    - if: '$CI_COMMIT_BRANCH || $CI_MERGE_REQUEST_IID'
